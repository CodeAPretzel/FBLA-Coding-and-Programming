{
  "version": 3,
  "sources": ["../../@mui/x-data-grid/hooks/features/headerFiltering/useGridHeaderFiltering.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from '../../utils/useGridApiMethod';\nimport { useGridLogger } from '../../utils';\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from '../columns/gridColumnsSelector';\nexport const headerFilteringStateInitializer = (state, props) => _extends({}, state, {\n  headerFiltering: {\n    enabled: props.headerFilters ?? false,\n    editing: null,\n    menuOpen: null\n  }\n});\nexport const useGridHeaderFiltering = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridHeaderFiltering');\n  const setHeaderFilterState = React.useCallback(headerFilterState => {\n    apiRef.current.setState(state => {\n      // Safety check to avoid MIT users from using it\n      // This hook should ultimately be moved to the Pro package\n      if (props.signature === 'DataGrid') {\n        return state;\n      }\n      return _extends({}, state, {\n        headerFiltering: {\n          enabled: props.headerFilters ?? false,\n          editing: headerFilterState.editing ?? null,\n          menuOpen: headerFilterState.menuOpen ?? null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.signature, props.headerFilters]);\n  const startHeaderFilterEditMode = React.useCallback(field => {\n    logger.debug(`Starting edit mode on header filter for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      editing: field\n    });\n  }, [apiRef, logger]);\n  const stopHeaderFilterEditMode = React.useCallback(() => {\n    logger.debug(`Stopping edit mode on header filter`);\n    apiRef.current.setHeaderFilterState({\n      editing: null\n    });\n  }, [apiRef, logger]);\n  const showHeaderFilterMenu = React.useCallback(field => {\n    logger.debug(`Opening header filter menu for field: ${field}`);\n    apiRef.current.setHeaderFilterState({\n      menuOpen: field\n    });\n  }, [apiRef, logger]);\n  const hideHeaderFilterMenu = React.useCallback(() => {\n    logger.debug(`Hiding header filter menu for active field`);\n    let fieldToFocus = apiRef.current.state.headerFiltering.menuOpen;\n    if (fieldToFocus) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setHeaderFilterState({\n        menuOpen: null\n      });\n      apiRef.current.setColumnHeaderFilterFocus(fieldToFocus);\n    }\n  }, [apiRef, logger]);\n  const headerFilterPrivateApi = {\n    setHeaderFilterState\n  };\n  const headerFilterApi = {\n    startHeaderFilterEditMode,\n    stopHeaderFilterEditMode,\n    showHeaderFilterMenu,\n    hideHeaderFilterMenu\n  };\n  useGridApiMethod(apiRef, headerFilterApi, 'public');\n  useGridApiMethod(apiRef, headerFilterPrivateApi, 'private');\n\n  /*\n   * EFFECTS\n   */\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      apiRef.current.setHeaderFilterState({\n        enabled: props.headerFilters ?? false\n      });\n    }\n  }, [apiRef, props.headerFilters]);\n};"],
  "mappings": "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",
  "names": []
}
